Nonterminals useless in grammar

    prog


Terminals unused in grammar

    NOT
    AND
    OR


Rules useless in grammar

   76 prog: PROGRAM


State 18 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 $@1: %empty

    2 $@2: %empty

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT

    4 IdentifierList: IDENTIFIER
    5               | IdentifierList COMMA IDENTIFIER

    6 Declarations: %empty
    7             | Declarations VAR IdentifierList COLON Type SEMICOLON

    8 Type: StandardType
    9     | ArraySize StandardType

   10 ArraySize: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF
   11          | ArraySize ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF

   12 StandardType: INTEGER
   13             | REAL
   14             | STRING

   15 SubprogramDeclarations: %empty
   16                       | SubprogramDeclarations SubprogramDeclaration

   17 $@3: %empty

   18 SubprogramDeclaration: $@3 SubprogramHead Declarations CompoundStatement SEMICOLON

   19 $@4: %empty

   20 SubprogramHead: FUNCTION IDENTIFIER $@4 Arguments COLON StandardType SEMICOLON

   21 $@5: %empty

   22 SubprogramHead: PROCEDURE IDENTIFIER $@5 Arguments SEMICOLON

   23 Arguments: %empty
   24          | LPAREN ParameterList RPAREN

   25 ParameterList: Params
   26              | ParameterList SEMICOLON Params

   27 Params: OptionalVar IdentifierList COLON Type

   28 OptionalVar: %empty
   29            | VAR

   30 CompoundStatement: PBEGIN OptionalStatements END

   31 OptionalStatements: %empty
   32                   | StatementList

   33 StatementList: Statement
   34              | StatementList SEMICOLON Statement

   35 Statement: %empty
   36          | Variable ASSIGNMENT Expression
   37          | ProcedureStatement
   38          | CompoundStatement
   39          | IF Expression THEN Statement ELSE Statement
   40          | WHILE Expression DO Statement

   41 ProcedureStatement: IDENTIFIER
   42                   | IDENTIFIER LPAREN ExpressionList RPAREN

   43 ExpressionList: Expression
   44               | ExpressionList COMMA Expression

   45 Expression: SimpleExpression
   46           | SimpleExpression Relop SimpleExpression

   47 SimpleExpression: Term
   48                 | SimpleExpression Addop Term

   49 Term: Factor
   50     | Term Mulop Factor

   51 Factor: LPAREN Expression RPAREN
   52       | Variable
   53       | Num
   54       | SUBOP Num
   55       | SUBOP SUBOP SUBOP Num
   56       | LITERALSTR
   57       | Function_call

   58 Addop: ADDOP
   59      | SUBOP

   60 Mulop: MULOP
   61      | DIVOP

   62 Relop: GTOP
   63      | LTOP
   64      | EQOP
   65      | GETOP
   66      | LETOP
   67      | NEQOP

   68 Variable: IDENTIFIER
   69         | IDENTIFIER Array

   70 Array: LBRACE Expression RBRACE
   71      | Array LBRACE Expression RBRACE

   72 Num: REALNUMBER
   73    | INTEGERNUM
   74    | SCIENTIFIC

   75 Function_call: IDENTIFIER LPAREN ExpressionList RPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 3
    VAR (259) 7 29
    ARRAY (260) 10 11
    OF (261) 10 11
    INTEGER (262) 12
    REAL (263) 13
    STRING (264) 14
    FUNCTION (265) 20
    PROCEDURE (266) 22
    PBEGIN (267) 30
    END (268) 30
    IF (269) 39
    THEN (270) 39
    ELSE (271) 39
    WHILE (272) 40
    DO (273) 40
    NOT (274)
    AND (275)
    OR (276)
    LPAREN (277) 3 24 42 51 75
    RPAREN (278) 3 24 42 51 75
    SEMICOLON (279) 3 7 18 20 22 26 34
    DOT (280) 3
    COMMA (281) 5 44
    COLON (282) 7 20 27
    LBRACE (283) 10 11 70 71
    RBRACE (284) 10 11 70 71
    DOTDOT (285) 10 11
    ASSIGNMENT (286) 36
    ADDOP (287) 58
    SUBOP (288) 54 55 59
    MULOP (289) 60
    DIVOP (290) 61
    LTOP (291) 63
    GTOP (292) 62
    EQOP (293) 64
    GETOP (294) 65
    LETOP (295) 66
    NEQOP (296) 67
    REALNUMBER <val> (297) 72
    INTEGERNUM <val> (298) 10 11 73
    SCIENTIFIC <val> (299) 74
    LITERALSTR <val> (300) 56
    IDENTIFIER <name> (301) 3 4 5 20 22 41 42 68 69 75


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    Program <node> (48)
        on left: 3
        on right: 0
    $@1 (49)
        on left: 1
        on right: 3
    $@2 (50)
        on left: 2
        on right: 3
    IdentifierList <node> (51)
        on left: 4 5
        on right: 3 5 7 27
    Declarations <node> (52)
        on left: 6 7
        on right: 3 7 18
    Type <node> (53)
        on left: 8 9
        on right: 7 27
    ArraySize <node> (54)
        on left: 10 11
        on right: 9 11
    StandardType <integer> (55)
        on left: 12 13 14
        on right: 8 9 20
    SubprogramDeclarations <node> (56)
        on left: 15 16
        on right: 3 16
    SubprogramDeclaration <node> (57)
        on left: 18
        on right: 16
    $@3 (58)
        on left: 17
        on right: 18
    SubprogramHead <node> (59)
        on left: 20 22
        on right: 18
    $@4 (60)
        on left: 19
        on right: 20
    $@5 (61)
        on left: 21
        on right: 22
    Arguments <node> (62)
        on left: 23 24
        on right: 20 22
    ParameterList <node> (63)
        on left: 25 26
        on right: 24 26
    Params <node> (64)
        on left: 27
        on right: 25 26
    OptionalVar <node> (65)
        on left: 28 29
        on right: 27
    CompoundStatement <node> (66)
        on left: 30
        on right: 3 18 38
    OptionalStatements <node> (67)
        on left: 31 32
        on right: 30
    StatementList <node> (68)
        on left: 33 34
        on right: 32 34
    Statement <node> (69)
        on left: 35 36 37 38 39 40
        on right: 33 34 39 40
    ProcedureStatement <node> (70)
        on left: 41 42
        on right: 37
    ExpressionList <node> (71)
        on left: 43 44
        on right: 42 44 75
    Expression <node> (72)
        on left: 45 46
        on right: 36 39 40 43 44 51 70 71
    SimpleExpression <node> (73)
        on left: 47 48
        on right: 45 46 48
    Term <node> (74)
        on left: 49 50
        on right: 47 48 50
    Factor <node> (75)
        on left: 51 52 53 54 55 56 57
        on right: 49 50
    Addop <integer> (76)
        on left: 58 59
        on right: 48
    Mulop <integer> (77)
        on left: 60 61
        on right: 50
    Relop <integer> (78)
        on left: 62 63 64 65 66 67
        on right: 46
    Variable <node> (79)
        on left: 68 69
        on right: 36 52
    Array <node> (80)
        on left: 70 71
        on right: 69 71
    Num <node> (81)
        on left: 72 73 74
        on right: 53 54 55
    Function_call <node> (82)
        on left: 75
        on right: 57


State 0

    0 $accept: . Program $end

    PROGRAM  shift, and go to state 1

    Program  go to state 2


State 1

    3 Program: PROGRAM . IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    3 Program: PROGRAM IDENTIFIER . $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT

    $default  reduce using rule 1 ($@1)

    $@1  go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    3 Program: PROGRAM IDENTIFIER $@1 . LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT

    LPAREN  shift, and go to state 6


State 6

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN . IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT

    IDENTIFIER  shift, and go to state 7

    IdentifierList  go to state 8


State 7

    4 IdentifierList: IDENTIFIER .

    $default  reduce using rule 4 (IdentifierList)


State 8

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList . RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT
    5 IdentifierList: IdentifierList . COMMA IDENTIFIER

    RPAREN  shift, and go to state 9
    COMMA   shift, and go to state 10


State 9

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN . SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT

    SEMICOLON  shift, and go to state 11


State 10

    5 IdentifierList: IdentifierList COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


State 11

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON . $@2 Declarations SubprogramDeclarations CompoundStatement DOT

    $default  reduce using rule 2 ($@2)

    $@2  go to state 13


State 12

    5 IdentifierList: IdentifierList COMMA IDENTIFIER .

    $default  reduce using rule 5 (IdentifierList)


State 13

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 . Declarations SubprogramDeclarations CompoundStatement DOT

    $default  reduce using rule 6 (Declarations)

    Declarations  go to state 14


State 14

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations . SubprogramDeclarations CompoundStatement DOT
    7 Declarations: Declarations . VAR IdentifierList COLON Type SEMICOLON

    VAR  shift, and go to state 15

    $default  reduce using rule 15 (SubprogramDeclarations)

    SubprogramDeclarations  go to state 16


State 15

    7 Declarations: Declarations VAR . IdentifierList COLON Type SEMICOLON

    IDENTIFIER  shift, and go to state 7

    IdentifierList  go to state 17


State 16

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations . CompoundStatement DOT
   16 SubprogramDeclarations: SubprogramDeclarations . SubprogramDeclaration

    PBEGIN  shift, and go to state 18

    $default  reduce using rule 17 ($@3)

    SubprogramDeclaration  go to state 19
    $@3                    go to state 20
    CompoundStatement      go to state 21


State 17

    5 IdentifierList: IdentifierList . COMMA IDENTIFIER
    7 Declarations: Declarations VAR IdentifierList . COLON Type SEMICOLON

    COMMA  shift, and go to state 10
    COLON  shift, and go to state 22


State 18

   30 CompoundStatement: PBEGIN . OptionalStatements END

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    IDENTIFIER  shift, and go to state 25

    END        reduce using rule 31 (OptionalStatements)
    END        [reduce using rule 35 (Statement)]
    SEMICOLON  reduce using rule 35 (Statement)
    $default   reduce using rule 31 (OptionalStatements)

    CompoundStatement   go to state 26
    OptionalStatements  go to state 27
    StatementList       go to state 28
    Statement           go to state 29
    ProcedureStatement  go to state 30
    Variable            go to state 31


State 19

   16 SubprogramDeclarations: SubprogramDeclarations SubprogramDeclaration .

    $default  reduce using rule 16 (SubprogramDeclarations)


State 20

   18 SubprogramDeclaration: $@3 . SubprogramHead Declarations CompoundStatement SEMICOLON

    FUNCTION   shift, and go to state 32
    PROCEDURE  shift, and go to state 33

    SubprogramHead  go to state 34


State 21

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement . DOT

    DOT  shift, and go to state 35


State 22

    7 Declarations: Declarations VAR IdentifierList COLON . Type SEMICOLON

    ARRAY    shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    Type          go to state 40
    ArraySize     go to state 41
    StandardType  go to state 42


State 23

   39 Statement: IF . Expression THEN Statement ELSE Statement

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Expression        go to state 50
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 24

   40 Statement: WHILE . Expression DO Statement

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Expression        go to state 57
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 25

   41 ProcedureStatement: IDENTIFIER .
   42                   | IDENTIFIER . LPAREN ExpressionList RPAREN
   68 Variable: IDENTIFIER .
   69         | IDENTIFIER . Array

    LPAREN  shift, and go to state 58
    LBRACE  shift, and go to state 59

    ASSIGNMENT  reduce using rule 68 (Variable)
    $default    reduce using rule 41 (ProcedureStatement)

    Array  go to state 60


State 26

   38 Statement: CompoundStatement .

    $default  reduce using rule 38 (Statement)


State 27

   30 CompoundStatement: PBEGIN OptionalStatements . END

    END  shift, and go to state 61


State 28

   32 OptionalStatements: StatementList .
   34 StatementList: StatementList . SEMICOLON Statement

    SEMICOLON  shift, and go to state 62

    $default  reduce using rule 32 (OptionalStatements)


State 29

   33 StatementList: Statement .

    $default  reduce using rule 33 (StatementList)


State 30

   37 Statement: ProcedureStatement .

    $default  reduce using rule 37 (Statement)


State 31

   36 Statement: Variable . ASSIGNMENT Expression

    ASSIGNMENT  shift, and go to state 63


State 32

   20 SubprogramHead: FUNCTION . IDENTIFIER $@4 Arguments COLON StandardType SEMICOLON

    IDENTIFIER  shift, and go to state 64


State 33

   22 SubprogramHead: PROCEDURE . IDENTIFIER $@5 Arguments SEMICOLON

    IDENTIFIER  shift, and go to state 65


State 34

   18 SubprogramDeclaration: $@3 SubprogramHead . Declarations CompoundStatement SEMICOLON

    $default  reduce using rule 6 (Declarations)

    Declarations  go to state 66


State 35

    3 Program: PROGRAM IDENTIFIER $@1 LPAREN IdentifierList RPAREN SEMICOLON $@2 Declarations SubprogramDeclarations CompoundStatement DOT .

    $default  reduce using rule 3 (Program)


State 36

   10 ArraySize: ARRAY . LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF

    LBRACE  shift, and go to state 67


State 37

   12 StandardType: INTEGER .

    $default  reduce using rule 12 (StandardType)


State 38

   13 StandardType: REAL .

    $default  reduce using rule 13 (StandardType)


State 39

   14 StandardType: STRING .

    $default  reduce using rule 14 (StandardType)


State 40

    7 Declarations: Declarations VAR IdentifierList COLON Type . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 41

    9 Type: ArraySize . StandardType
   11 ArraySize: ArraySize . ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF

    ARRAY    shift, and go to state 69
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    StandardType  go to state 70


State 42

    8 Type: StandardType .

    $default  reduce using rule 8 (Type)


State 43

   51 Factor: LPAREN . Expression RPAREN

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Expression        go to state 71
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 44

   54 Factor: SUBOP . Num
   55       | SUBOP . SUBOP SUBOP Num

    SUBOP       shift, and go to state 72
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47

    Num  go to state 73


State 45

   72 Num: REALNUMBER .

    $default  reduce using rule 72 (Num)


State 46

   73 Num: INTEGERNUM .

    $default  reduce using rule 73 (Num)


State 47

   74 Num: SCIENTIFIC .

    $default  reduce using rule 74 (Num)


State 48

   56 Factor: LITERALSTR .

    $default  reduce using rule 56 (Factor)


State 49

   68 Variable: IDENTIFIER .
   69         | IDENTIFIER . Array
   75 Function_call: IDENTIFIER . LPAREN ExpressionList RPAREN

    LPAREN  shift, and go to state 74
    LBRACE  shift, and go to state 59

    $default  reduce using rule 68 (Variable)

    Array  go to state 60


State 50

   39 Statement: IF Expression . THEN Statement ELSE Statement

    THEN  shift, and go to state 75


State 51

   45 Expression: SimpleExpression .
   46           | SimpleExpression . Relop SimpleExpression
   48 SimpleExpression: SimpleExpression . Addop Term

    ADDOP  shift, and go to state 76
    SUBOP  shift, and go to state 77
    LTOP   shift, and go to state 78
    GTOP   shift, and go to state 79
    EQOP   shift, and go to state 80
    GETOP  shift, and go to state 81
    LETOP  shift, and go to state 82
    NEQOP  shift, and go to state 83

    $default  reduce using rule 45 (Expression)

    Addop  go to state 84
    Relop  go to state 85


State 52

   47 SimpleExpression: Term .
   50 Term: Term . Mulop Factor

    MULOP  shift, and go to state 86
    DIVOP  shift, and go to state 87

    $default  reduce using rule 47 (SimpleExpression)

    Mulop  go to state 88


State 53

   49 Term: Factor .

    $default  reduce using rule 49 (Term)


State 54

   52 Factor: Variable .

    $default  reduce using rule 52 (Factor)


State 55

   53 Factor: Num .

    $default  reduce using rule 53 (Factor)


State 56

   57 Factor: Function_call .

    $default  reduce using rule 57 (Factor)


State 57

   40 Statement: WHILE Expression . DO Statement

    DO  shift, and go to state 89


State 58

   42 ProcedureStatement: IDENTIFIER LPAREN . ExpressionList RPAREN

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    ExpressionList    go to state 90
    Expression        go to state 91
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 59

   70 Array: LBRACE . Expression RBRACE

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Expression        go to state 92
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 60

   69 Variable: IDENTIFIER Array .
   71 Array: Array . LBRACE Expression RBRACE

    LBRACE  shift, and go to state 93

    $default  reduce using rule 69 (Variable)


State 61

   30 CompoundStatement: PBEGIN OptionalStatements END .

    $default  reduce using rule 30 (CompoundStatement)


State 62

   34 StatementList: StatementList SEMICOLON . Statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 35 (Statement)

    CompoundStatement   go to state 26
    Statement           go to state 94
    ProcedureStatement  go to state 30
    Variable            go to state 31


State 63

   36 Statement: Variable ASSIGNMENT . Expression

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Expression        go to state 95
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 64

   20 SubprogramHead: FUNCTION IDENTIFIER . $@4 Arguments COLON StandardType SEMICOLON

    $default  reduce using rule 19 ($@4)

    $@4  go to state 96


State 65

   22 SubprogramHead: PROCEDURE IDENTIFIER . $@5 Arguments SEMICOLON

    $default  reduce using rule 21 ($@5)

    $@5  go to state 97


State 66

    7 Declarations: Declarations . VAR IdentifierList COLON Type SEMICOLON
   18 SubprogramDeclaration: $@3 SubprogramHead Declarations . CompoundStatement SEMICOLON

    VAR     shift, and go to state 15
    PBEGIN  shift, and go to state 18

    CompoundStatement  go to state 98


State 67

   10 ArraySize: ARRAY LBRACE . INTEGERNUM DOTDOT INTEGERNUM RBRACE OF

    INTEGERNUM  shift, and go to state 99


State 68

    7 Declarations: Declarations VAR IdentifierList COLON Type SEMICOLON .

    $default  reduce using rule 7 (Declarations)


State 69

   11 ArraySize: ArraySize ARRAY . LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF

    LBRACE  shift, and go to state 100


State 70

    9 Type: ArraySize StandardType .

    $default  reduce using rule 9 (Type)


State 71

   51 Factor: LPAREN Expression . RPAREN

    RPAREN  shift, and go to state 101


State 72

   55 Factor: SUBOP SUBOP . SUBOP Num

    SUBOP  shift, and go to state 102


State 73

   54 Factor: SUBOP Num .

    $default  reduce using rule 54 (Factor)


State 74

   75 Function_call: IDENTIFIER LPAREN . ExpressionList RPAREN

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    ExpressionList    go to state 103
    Expression        go to state 91
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 75

   39 Statement: IF Expression THEN . Statement ELSE Statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 35 (Statement)

    CompoundStatement   go to state 26
    Statement           go to state 104
    ProcedureStatement  go to state 30
    Variable            go to state 31


State 76

   58 Addop: ADDOP .

    $default  reduce using rule 58 (Addop)


State 77

   59 Addop: SUBOP .

    $default  reduce using rule 59 (Addop)


State 78

   63 Relop: LTOP .

    $default  reduce using rule 63 (Relop)


State 79

   62 Relop: GTOP .

    $default  reduce using rule 62 (Relop)


State 80

   64 Relop: EQOP .

    $default  reduce using rule 64 (Relop)


State 81

   65 Relop: GETOP .

    $default  reduce using rule 65 (Relop)


State 82

   66 Relop: LETOP .

    $default  reduce using rule 66 (Relop)


State 83

   67 Relop: NEQOP .

    $default  reduce using rule 67 (Relop)


State 84

   48 SimpleExpression: SimpleExpression Addop . Term

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Term           go to state 105
    Factor         go to state 53
    Variable       go to state 54
    Num            go to state 55
    Function_call  go to state 56


State 85

   46 Expression: SimpleExpression Relop . SimpleExpression

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    SimpleExpression  go to state 106
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 86

   60 Mulop: MULOP .

    $default  reduce using rule 60 (Mulop)


State 87

   61 Mulop: DIVOP .

    $default  reduce using rule 61 (Mulop)


State 88

   50 Term: Term Mulop . Factor

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Factor         go to state 107
    Variable       go to state 54
    Num            go to state 55
    Function_call  go to state 56


State 89

   40 Statement: WHILE Expression DO . Statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 35 (Statement)

    CompoundStatement   go to state 26
    Statement           go to state 108
    ProcedureStatement  go to state 30
    Variable            go to state 31


State 90

   42 ProcedureStatement: IDENTIFIER LPAREN ExpressionList . RPAREN
   44 ExpressionList: ExpressionList . COMMA Expression

    RPAREN  shift, and go to state 109
    COMMA   shift, and go to state 110


State 91

   43 ExpressionList: Expression .

    $default  reduce using rule 43 (ExpressionList)


State 92

   70 Array: LBRACE Expression . RBRACE

    RBRACE  shift, and go to state 111


State 93

   71 Array: Array LBRACE . Expression RBRACE

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Expression        go to state 112
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 94

   34 StatementList: StatementList SEMICOLON Statement .

    $default  reduce using rule 34 (StatementList)


State 95

   36 Statement: Variable ASSIGNMENT Expression .

    $default  reduce using rule 36 (Statement)


State 96

   20 SubprogramHead: FUNCTION IDENTIFIER $@4 . Arguments COLON StandardType SEMICOLON

    LPAREN  shift, and go to state 113

    $default  reduce using rule 23 (Arguments)

    Arguments  go to state 114


State 97

   22 SubprogramHead: PROCEDURE IDENTIFIER $@5 . Arguments SEMICOLON

    LPAREN  shift, and go to state 113

    $default  reduce using rule 23 (Arguments)

    Arguments  go to state 115


State 98

   18 SubprogramDeclaration: $@3 SubprogramHead Declarations CompoundStatement . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 99

   10 ArraySize: ARRAY LBRACE INTEGERNUM . DOTDOT INTEGERNUM RBRACE OF

    DOTDOT  shift, and go to state 117


State 100

   11 ArraySize: ArraySize ARRAY LBRACE . INTEGERNUM DOTDOT INTEGERNUM RBRACE OF

    INTEGERNUM  shift, and go to state 118


State 101

   51 Factor: LPAREN Expression RPAREN .

    $default  reduce using rule 51 (Factor)


State 102

   55 Factor: SUBOP SUBOP SUBOP . Num

    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47

    Num  go to state 119


State 103

   44 ExpressionList: ExpressionList . COMMA Expression
   75 Function_call: IDENTIFIER LPAREN ExpressionList . RPAREN

    RPAREN  shift, and go to state 120
    COMMA   shift, and go to state 110


State 104

   39 Statement: IF Expression THEN Statement . ELSE Statement

    ELSE  shift, and go to state 121


State 105

   48 SimpleExpression: SimpleExpression Addop Term .
   50 Term: Term . Mulop Factor

    MULOP  shift, and go to state 86
    DIVOP  shift, and go to state 87

    $default  reduce using rule 48 (SimpleExpression)

    Mulop  go to state 88


State 106

   46 Expression: SimpleExpression Relop SimpleExpression .
   48 SimpleExpression: SimpleExpression . Addop Term

    ADDOP  shift, and go to state 76
    SUBOP  shift, and go to state 77

    $default  reduce using rule 46 (Expression)

    Addop  go to state 84


State 107

   50 Term: Term Mulop Factor .

    $default  reduce using rule 50 (Term)


State 108

   40 Statement: WHILE Expression DO Statement .

    $default  reduce using rule 40 (Statement)


State 109

   42 ProcedureStatement: IDENTIFIER LPAREN ExpressionList RPAREN .

    $default  reduce using rule 42 (ProcedureStatement)


State 110

   44 ExpressionList: ExpressionList COMMA . Expression

    LPAREN      shift, and go to state 43
    SUBOP       shift, and go to state 44
    REALNUMBER  shift, and go to state 45
    INTEGERNUM  shift, and go to state 46
    SCIENTIFIC  shift, and go to state 47
    LITERALSTR  shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    Expression        go to state 122
    SimpleExpression  go to state 51
    Term              go to state 52
    Factor            go to state 53
    Variable          go to state 54
    Num               go to state 55
    Function_call     go to state 56


State 111

   70 Array: LBRACE Expression RBRACE .

    $default  reduce using rule 70 (Array)


State 112

   71 Array: Array LBRACE Expression . RBRACE

    RBRACE  shift, and go to state 123


State 113

   24 Arguments: LPAREN . ParameterList RPAREN

    VAR  shift, and go to state 124

    $default  reduce using rule 28 (OptionalVar)

    ParameterList  go to state 125
    Params         go to state 126
    OptionalVar    go to state 127


State 114

   20 SubprogramHead: FUNCTION IDENTIFIER $@4 Arguments . COLON StandardType SEMICOLON

    COLON  shift, and go to state 128


State 115

   22 SubprogramHead: PROCEDURE IDENTIFIER $@5 Arguments . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 116

   18 SubprogramDeclaration: $@3 SubprogramHead Declarations CompoundStatement SEMICOLON .

    $default  reduce using rule 18 (SubprogramDeclaration)


State 117

   10 ArraySize: ARRAY LBRACE INTEGERNUM DOTDOT . INTEGERNUM RBRACE OF

    INTEGERNUM  shift, and go to state 130


State 118

   11 ArraySize: ArraySize ARRAY LBRACE INTEGERNUM . DOTDOT INTEGERNUM RBRACE OF

    DOTDOT  shift, and go to state 131


State 119

   55 Factor: SUBOP SUBOP SUBOP Num .

    $default  reduce using rule 55 (Factor)


State 120

   75 Function_call: IDENTIFIER LPAREN ExpressionList RPAREN .

    $default  reduce using rule 75 (Function_call)


State 121

   39 Statement: IF Expression THEN Statement ELSE . Statement

    PBEGIN      shift, and go to state 18
    IF          shift, and go to state 23
    WHILE       shift, and go to state 24
    IDENTIFIER  shift, and go to state 25

    $default  reduce using rule 35 (Statement)

    CompoundStatement   go to state 26
    Statement           go to state 132
    ProcedureStatement  go to state 30
    Variable            go to state 31


State 122

   44 ExpressionList: ExpressionList COMMA Expression .

    $default  reduce using rule 44 (ExpressionList)


State 123

   71 Array: Array LBRACE Expression RBRACE .

    $default  reduce using rule 71 (Array)


State 124

   29 OptionalVar: VAR .

    $default  reduce using rule 29 (OptionalVar)


State 125

   24 Arguments: LPAREN ParameterList . RPAREN
   26 ParameterList: ParameterList . SEMICOLON Params

    RPAREN     shift, and go to state 133
    SEMICOLON  shift, and go to state 134


State 126

   25 ParameterList: Params .

    $default  reduce using rule 25 (ParameterList)


State 127

   27 Params: OptionalVar . IdentifierList COLON Type

    IDENTIFIER  shift, and go to state 7

    IdentifierList  go to state 135


State 128

   20 SubprogramHead: FUNCTION IDENTIFIER $@4 Arguments COLON . StandardType SEMICOLON

    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    StandardType  go to state 136


State 129

   22 SubprogramHead: PROCEDURE IDENTIFIER $@5 Arguments SEMICOLON .

    $default  reduce using rule 22 (SubprogramHead)


State 130

   10 ArraySize: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM . RBRACE OF

    RBRACE  shift, and go to state 137


State 131

   11 ArraySize: ArraySize ARRAY LBRACE INTEGERNUM DOTDOT . INTEGERNUM RBRACE OF

    INTEGERNUM  shift, and go to state 138


State 132

   39 Statement: IF Expression THEN Statement ELSE Statement .

    $default  reduce using rule 39 (Statement)


State 133

   24 Arguments: LPAREN ParameterList RPAREN .

    $default  reduce using rule 24 (Arguments)


State 134

   26 ParameterList: ParameterList SEMICOLON . Params

    VAR  shift, and go to state 124

    $default  reduce using rule 28 (OptionalVar)

    Params       go to state 139
    OptionalVar  go to state 127


State 135

    5 IdentifierList: IdentifierList . COMMA IDENTIFIER
   27 Params: OptionalVar IdentifierList . COLON Type

    COMMA  shift, and go to state 10
    COLON  shift, and go to state 140


State 136

   20 SubprogramHead: FUNCTION IDENTIFIER $@4 Arguments COLON StandardType . SEMICOLON

    SEMICOLON  shift, and go to state 141


State 137

   10 ArraySize: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE . OF

    OF  shift, and go to state 142


State 138

   11 ArraySize: ArraySize ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM . RBRACE OF

    RBRACE  shift, and go to state 143


State 139

   26 ParameterList: ParameterList SEMICOLON Params .

    $default  reduce using rule 26 (ParameterList)


State 140

   27 Params: OptionalVar IdentifierList COLON . Type

    ARRAY    shift, and go to state 36
    INTEGER  shift, and go to state 37
    REAL     shift, and go to state 38
    STRING   shift, and go to state 39

    Type          go to state 144
    ArraySize     go to state 41
    StandardType  go to state 42


State 141

   20 SubprogramHead: FUNCTION IDENTIFIER $@4 Arguments COLON StandardType SEMICOLON .

    $default  reduce using rule 20 (SubprogramHead)


State 142

   10 ArraySize: ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF .

    $default  reduce using rule 10 (ArraySize)


State 143

   11 ArraySize: ArraySize ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE . OF

    OF  shift, and go to state 145


State 144

   27 Params: OptionalVar IdentifierList COLON Type .

    $default  reduce using rule 27 (Params)


State 145

   11 ArraySize: ArraySize ARRAY LBRACE INTEGERNUM DOTDOT INTEGERNUM RBRACE OF .

    $default  reduce using rule 11 (ArraySize)
